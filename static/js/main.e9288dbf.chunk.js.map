{"version":3,"sources":["Users.js","components/User.js","components/Friends.js","components/Nav.js","components/Chat.js","components/Home.js","components/Messaging.js","App.js","index.js"],"names":["fakeUsers","id","name","img","online","welcomeMessage","role","User","user","chatToUser","onlineStatus","className","src","alt","onClick","Friends","map","status","Nav","to","localStorage","removeItem","Chat","currentUser","handleChatToUser","state","Talk","ready","then","me","friend","window","talkSession","Session","appId","conversationId","oneOnOneId","conversation","getOrCreateConversation","setParticipant","chatbox","createChatbox","mount","container","catch","e","console","error","currentStoredUser","getItem","JSON","parse","messages","this","ref","c","style","height","React","Component","Home","handleSubmit","preventDefault","randomNum","Math","ceil","random","userData","setItem","stringify","setState","props","history","push","handleInputChange","target","value","onSubmit","htmlFor","type","onChange","placeholder","required","disabled","length","Messaging","inbox","createInbox","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9288dbf.chunk.js","sourcesContent":["export const fakeUsers = [\n  {\n    id: \"2\",\n    name: \"Bob Smith\",\n    img: \"https://randomuser.me/api/portraits/men/12.jpg\",\n    online: true,\n    welcomeMessage: \"Hey there! Love to chat :-)\",\n    role: \"Member\",\n  },\n  {\n    id: \"3\",\n    name: \"Jerry Townsend\",\n    img: \"https://randomuser.me/api/portraits/men/34.jpg\",\n    online: false,\n    welcomeMessage: \"Hey there! Love to chat :-)\",\n    role: \"Member\",\n  },\n  {\n    id: \"4\",\n    name: \"Hannah Grace\",\n    img: \"https://randomuser.me/api/portraits/women/23.jpg\",\n    online: true,\n    welcomeMessage: \"Hey there! Love to chat :-)\",\n    role: \"Member\",\n  },\n  {\n    id: \"5\",\n    name: \"Stephanie Humphrey\",\n    img: \"https://randomuser.me/api/portraits/women/51.jpg\",\n    online: true,\n    welcomeMessage: \"Hey there! Love to chat :-)\",\n    role: \"Member\",\n  },\n];\n","const User = ({ user, chatToUser, onlineStatus }) => (\n  <li className='user' key={user.id}>\n    <img src={user.img} alt={user.name} />\n    <div className='user-info'>\n      <div>\n        <h4>{user.name}</h4>\n        <p className={`status ${onlineStatus}`}>{onlineStatus}</p>\n      </div>\n      {chatToUser ? (\n        <button onClick={() => chatToUser(user)}>Message</button>\n      ) : null}\n    </div>\n  </li>\n);\n\nexport default User;\n","import { fakeUsers } from \"../Users\";\n\nimport User from \"./User\";\n\nconst Friends = ({ chatToUser }) => {\n  return (\n    <section className='friends'>\n      <ul>\n        {fakeUsers.map((user) => {\n          const status = user.online ? \"online\" : \"offline\";\n          return (\n            <User\n              key={user.id}\n              user={user}\n              chatToUser={chatToUser}\n              onlineStatus={status}\n            />\n          );\n        })}\n      </ul>\n    </section>\n  );\n};\nexport default Friends;\n","import { Link } from \"react-router-dom\";\n\nconst Nav = () => {\n  const clearSessionStorage = () => {\n    localStorage.removeItem(\"currentUser\");\n  };\n\n  return (\n    <nav>\n      <ul>\n        <li>\n          <Link to='/friends'>My Friends</Link>\n        </li>\n        <li>\n          <Link to='/messaging'>Messaging</Link>\n        </li>\n        <li>\n          <Link to='/' onClick={() => clearSessionStorage()}>\n            Logout\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport Talk from \"talkjs\";\n\nimport Friends from \"./Friends\";\nimport Nav from \"./Nav\";\nimport User from \"./User\";\n\n// The main chat window\nclass Chat extends React.Component {\n  constructor() {\n    super();\n\n    // gets current user object from local storage\n    let currentUser;\n    const currentStoredUser = localStorage.getItem(\"currentUser\");\n\n    if (currentStoredUser) {\n      currentUser = JSON.parse(currentStoredUser);\n    }\n\n    this.state = { messages: [], currentUser };\n  }\n\n  handleChatToUser = (user) => {\n    const { currentUser } = this.state;\n\n    /* Session initialization code */\n    Talk.ready\n      .then(() => {\n        /* Create the two users that will participate in the conversation */\n        const me = new Talk.User(currentUser);\n        const friend = new Talk.User(user);\n\n        /* Create a talk session  */\n        window.talkSession = new Talk.Session({\n          appId: \"t39Gmw8k\",\n          me: me,\n        });\n\n        /* Get a conversation ID or create one */\n        const conversationId = Talk.oneOnOneId(me, friend);\n        const conversation = window.talkSession.getOrCreateConversation(\n          conversationId\n        );\n\n        /* Set participants of the conversations */\n        conversation.setParticipant(me);\n        conversation.setParticipant(friend);\n\n        /* Create and mount chatbox in container */\n        this.chatbox = window.talkSession.createChatbox(conversation);\n        this.chatbox.mount(this.container);\n      })\n      .catch((e) => console.error(e));\n  };\n\n  render() {\n    const { currentUser } = this.state;\n\n    return (\n      <>\n        <Nav />\n        {/* user display */}\n        <section>\n          {currentUser && (\n            <User user={currentUser} chatToUser={false} onlineStatus={true} />\n          )}\n        </section>\n\n        {/* friends list and a chat box */}\n        <section className='messenger-window'>\n          <Friends chatToUser={this.handleChatToUser} />\n\n          {/* talkjs looks for this ref to render its prebuilt chat box */}\n          <div className='chatbox-container' ref={(c) => (this.container = c)}>\n            <div id='talkjs-container' style={{ height: \"300px\" }}>\n              <i></i>\n            </div>\n          </div>\n        </section>\n      </>\n    );\n  }\n}\n\nexport default Chat;\n","import React from \"react\";\n\nclass Home extends React.Component {\n  constructor() {\n    super();\n\n    this.state = { name: \"\", userData: {} };\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const randomNum = Math.ceil(Math.random() * 10000);\n    const userData = {\n      name: this.state.name,\n      id: randomNum,\n      online: true,\n      role: \"Member\",\n      img: \"https://talkjs.com/docs/img/ronald.jpg\",\n    };\n\n    localStorage.setItem(\"currentUser\", JSON.stringify(userData));\n\n    this.setState({ userData });\n\n    this.props.history.push(\"/friends\");\n  };\n\n  handleInputChange = (e) => {\n    this.setState({ name: e.target.value });\n  };\n\n  render() {\n    const { name } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <h3>Profile Creation</h3>\n        <label htmlFor='name'>Name:</label>\n        <input\n          type='text'\n          onChange={this.handleInputChange}\n          placeholder='Please enter a name...'\n          required\n          value={name}\n          name='name'\n          id='name'\n        />\n        <button type='submit' disabled={!name.length ? true : \"\"}>\n          Submit\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport Talk from \"talkjs\";\n\nimport Nav from \"./Nav\";\n\nclass Messaging extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let currentUser;\n    const currentStoredUser = localStorage.getItem(\"currentUser\");\n\n    if (currentStoredUser) {\n      currentUser = JSON.parse(currentStoredUser);\n    }\n\n    this.state = { currentUser };\n  }\n\n  componentDidMount() {\n    Talk.ready\n      .then(() => {\n        const me = new Talk.User(this.state.currentUser);\n\n        window.talkSession = new Talk.Session({\n          appId: \"t39Gmw8k\",\n          me: me,\n        });\n\n        this.inbox = window.talkSession.createInbox();\n        this.inbox.mount(this.container);\n      })\n      .catch((e) => console.error(e));\n  }\n\n  render() {\n    return (\n      <>\n        <Nav />\n\n        {/* talkjs looks for this ref to render its prebuilt chat box */}\n        <div\n          style={{ height: \"500px\" }}\n          className='inbox-container'\n          ref={(c) => (this.container = c)}\n        >\n          Loading...\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Messaging;\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport \"./css/style.css\";\n\nimport Chat from \"./components/Chat\";\nimport Home from \"./components/Home\";\nimport Messaging from \"./components/Messaging\";\n\nconst App = () => {\n  return (\n    <main>\n      <Router>\n        <header className='main-header'>\n          <h1>Messenger Application</h1>\n        </header>\n        <Route path='/' exact component={Home} />\n        <Route path='/friends' component={Chat} />\n        <Route path='/messaging' component={Messaging} />\n      </Router>\n    </main>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}